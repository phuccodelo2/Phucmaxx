--// UI PHUCMAX - Luxury Tabs + Buttons (Design chuẩn đẹp, tab có icon+tên, nút rõ nét, spacing đều, mobile friendly)-- Author: Copilot chỉnh sửa cho phuccodelo2 | Hướng dẫn thêm tab/nút cuối filelocal function createMainUI()    -- ScreenGui    local ScreenGui = Instance.new("ScreenGui")    ScreenGui.Name = "PHUCMAX_UI"    ScreenGui.ResetOnSpawn = false    ScreenGui.Parent = game.CoreGui    -- FPS+Ping Header    local Frame = Instance.new("Frame")    Frame.Parent = ScreenGui    Frame.BackgroundTransparency = 1    Frame.AnchorPoint = Vector2.new(0.5, 0)    Frame.Position = UDim2.new(0.5, 0, 0, 0)    Frame.Size = UDim2.new(0, 400, 0, 40)    local Label = Instance.new("TextLabel")    Label.Parent = Frame    Label.Size = UDim2.new(1, 0, 1, 0)    Label.BackgroundTransparency = 1    Label.Font = Enum.Font.GothamBold    Label.TextSize = 28    Label.Text = "PHUCMAX | FPS: 0 | Ping: 0ms"    Label.TextStrokeTransparency = 0.1    Label.TextColor3 = Color3.fromRGB(255,255,255)    Label.TextStrokeColor3 = Color3.fromRGB(0,0,0)    Label.RichText = true    local UIGradient = Instance.new("UIGradient")    UIGradient.Parent = Label    UIGradient.Color = ColorSequence.new{        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),        ColorSequenceKeypoint.new(0.16, Color3.fromRGB(255, 127, 0)),        ColorSequenceKeypoint.new(0.33, Color3.fromRGB(255, 255, 0)),        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)),        ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)),        ColorSequenceKeypoint.new(0.83, Color3.fromRGB(75, 0, 130)),        ColorSequenceKeypoint.new(1, Color3.fromRGB(148, 0, 211))    }    task.spawn(function() while task.wait(0.05) do UIGradient.Rotation = (UIGradient.Rotation + 5) % 360 end end)    -- FPS & Ping update    local RunService = game:GetService("RunService")    local Stats = game:GetService("Stats")    local fps, lastUpdate, frames = 0, tick(), 0    RunService.RenderStepped:Connect(function()        frames = frames + 1        local now = tick()        if now - lastUpdate >= 1 then            fps = frames            frames = 0            lastUpdate = now            local ping = math.floor(Stats.Network.ServerStatsItem["Data Ping"]:GetValue())            Label.Text = string.format("PHUCMAX | FPS: %d | Ping: %dms", fps, ping)        end    end)    -- Xóa UI cũ nếu có    for _, n in pairs({"PHUCMAX_MAINUI","PHUCMAX_TOGGLE"}) do        if game.CoreGui:FindFirstChild(n) then game.CoreGui[n]:Destroy() end    end    -- Toggle button (draggable)    local toggleGui = Instance.new("ScreenGui", game.CoreGui)    toggleGui.Name = "PHUCMAX_TOGGLE"    toggleGui.ResetOnSpawn = false    local toggleBtn = Instance.new("ImageButton", toggleGui)    toggleBtn.Name = "ToggleButton"    toggleBtn.Size = UDim2.new(0,54,0,54)    toggleBtn.Position = UDim2.new(0,18,0.5,-27)    toggleBtn.AnchorPoint = Vector2.new(0,0.5)    toggleBtn.Image = "rbxassetid://70869581156112"    toggleBtn.BackgroundTransparency = 0.2    toggleBtn.BorderSizePixel = 0    local uicorner = Instance.new("UICorner", toggleBtn)    uicorner.CornerRadius = UDim.new(0,18)    local uiStroke = Instance.new("UIStroke", toggleBtn)    uiStroke.Thickness = 2    uiStroke.Color = Color3.fromRGB(0,170,255)    -- Draggable toggle    local dragging, dragInput, dragStart, startPos    local UserInputService = game:GetService("UserInputService")    local function update(input)        local delta = input.Position - dragStart        toggleBtn.Position = UDim2.new(            startPos.X.Scale, startPos.X.Offset + delta.X,            startPos.Y.Scale, startPos.Y.Offset + delta.Y        )    end    toggleBtn.InputBegan:Connect(function(input)        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then            dragging = true            dragStart = input.Position            startPos = toggleBtn.Position            input.Changed:Connect(function()                if input.UserInputState == Enum.UserInputState.End then dragging = false end            end)        end    end)    toggleBtn.InputChanged:Connect(function(input)        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then            dragInput = input        end    end)    UserInputService.InputChanged:Connect(function(input)        if input == dragInput and dragging then update(input) end    end)    -- Main UI    local mainGui = Instance.new("ScreenGui", game.CoreGui)    mainGui.Name = "PHUCMAX_MAINUI"    mainGui.ResetOnSpawn = false    mainGui.Enabled = false    local mainFrame = Instance.new("Frame", mainGui)    mainFrame.Name = "MainFrame"    mainFrame.Size = UDim2.new(0,410,0,285)    mainFrame.Position = UDim2.new(0.5,0,0.5,0)    mainFrame.AnchorPoint = Vector2.new(0.5,0.5)    mainFrame.BackgroundColor3 = Color3.fromRGB(243,249,255)    mainFrame.BackgroundTransparency = 0    mainFrame.BorderSizePixel = 0    local mainCorner = Instance.new("UICorner", mainFrame)    mainCorner.CornerRadius = UDim.new(0,18)    local mainStroke = Instance.new("UIStroke", mainFrame)    mainStroke.Thickness = 3    mainStroke.Color = Color3.fromRGB(0,170,255)    -- Drag Main UI    local dragging_main, dragInput_main, dragStart_main, startPos_main    local function update_main(input)        local delta = input.Position - dragStart_main        mainFrame.Position = UDim2.new(            startPos_main.X.Scale, startPos_main.X.Offset + delta.X,            startPos_main.Y.Scale, startPos_main.Y.Offset + delta.Y        )    end    mainFrame.InputBegan:Connect(function(input)        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then            dragging_main = true            dragStart_main = input.Position            startPos_main = mainFrame.Position            input.Changed:Connect(function()                if input.UserInputState == Enum.UserInputState.End then dragging_main = false end            end)        end    end)    mainFrame.InputChanged:Connect(function(input)        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then            dragInput_main = input        end    end)    UserInputService.InputChanged:Connect(function(input)        if input == dragInput_main and dragging_main then update_main(input) end    end)    -- Toggle Main UI on click    toggleBtn.MouseButton1Click:Connect(function() mainGui.Enabled = not mainGui.Enabled end)    -- Notify    local function notify(msg)        local note = Instance.new("TextLabel", mainGui)        note.Size = UDim2.new(0,250,0,40)        note.Position = UDim2.new(1,-260,1,-60)        note.BackgroundColor3 = Color3.fromRGB(0,50,150)        note.BackgroundTransparency = 0.15        note.Text = msg        note.Font = Enum.Font.GothamBold        note.TextSize = 16        note.TextColor3 = Color3.fromRGB(255,255,255)        note.AnchorPoint = Vector2.new(0,0)        Instance.new("UICorner", note).CornerRadius = UDim.new(0,8)        local s = Instance.new("UIStroke", note)        s.Thickness = 1.5        s.Color = Color3.fromRGB(135,206,250)        task.delay(2.5,function() note:Destroy() end)    end    -- Tabs    local tabFrame = Instance.new("Frame", mainFrame)    tabFrame.Name = "TabFrame"    tabFrame.Size = UDim2.new(1, -20, 0, 54)    tabFrame.Position = UDim2.new(0,10,0,10)    tabFrame.BackgroundTransparency = 1    local tabList = Instance.new("UIListLayout", tabFrame)    tabList.FillDirection = Enum.FillDirection.Horizontal    tabList.SortOrder = Enum.SortOrder.LayoutOrder    tabList.Padding = UDim.new(0,10)    tabList.HorizontalAlignment = Enum.HorizontalAlignment.Left    -- Tab manager    local tabs = {}    local function createTab(tabName, icon)        local tabBtn = Instance.new("TextButton")        tabBtn.Size = UDim2.new(0, 134, 1, 0)        tabBtn.BackgroundColor3 = Color3.fromRGB(220,240,255)        tabBtn.AutoButtonColor = true        tabBtn.Text = ""        tabBtn.LayoutOrder = #tabFrame:GetChildren()        tabBtn.Name = "Tab_" .. tabName        local iconLabel = Instance.new("ImageLabel", tabBtn)        iconLabel.Image = icon        iconLabel.Size = UDim2.new(0, 28, 0, 28)        iconLabel.Position = UDim2.new(0, 10, 0.5, -14)        iconLabel.BackgroundTransparency = 1        local txt = Instance.new("TextLabel", tabBtn)        txt.Text = tabName        txt.Font = Enum.Font.GothamBold        txt.TextSize = 18        txt.TextColor3 = Color3.fromRGB(30,65,140)        txt.BackgroundTransparency = 1        txt.Position = UDim2.new(0, 44, 0, 0)        txt.Size = UDim2.new(1, -50, 1, 0)        txt.TextXAlignment = Enum.TextXAlignment.Left        local corner = Instance.new("UICorner", tabBtn)        corner.CornerRadius = UDim.new(0, 12)        local stroke = Instance.new("UIStroke", tabBtn)        stroke.Thickness = 2        stroke.Color = Color3.fromRGB(180,220,255)        tabBtn.Parent = tabFrame        local thisContent = Instance.new("ScrollingFrame", mainFrame)        thisContent.Name = tabName .. "_Content"        thisContent.Size = UDim2.new(1, -20, 1, -74)        thisContent.Position = UDim2.new(0,10,0,64)        thisContent.BackgroundTransparency = 1        thisContent.ScrollBarThickness = 8        thisContent.ClipsDescendants = true        thisContent.AutomaticCanvasSize = Enum.AutomaticSize.Y        thisContent.ScrollingDirection = Enum.ScrollingDirection.Y        thisContent.Visible = false        local list = Instance.new("UIListLayout", thisContent)        list.SortOrder = Enum.SortOrder.LayoutOrder        list.Padding = UDim.new(0,10)        list.HorizontalAlignment = Enum.HorizontalAlignment.Center        tabs[tabName] = {btn = tabBtn, frame = thisContent}        tabBtn.MouseButton1Click:Connect(function()            for _, data in pairs(tabs) do                data.frame.Visible = false                data.btn.BackgroundColor3 = Color3.fromRGB(220,240,255)                data.btn.UIStroke.Color = Color3.fromRGB(180,220,255)            end            thisContent.Visible = true            tabBtn.BackgroundColor3 = Color3.fromRGB(180,220,255)            tabBtn.UIStroke.Color = Color3.fromRGB(0, 140, 255)        end)        -- Tab đầu tiên bật sẵn        if #tabFrame:GetChildren() <= 3 then            thisContent.Visible = true            tabBtn.BackgroundColor3 = Color3.fromRGB(180,220,255)            tabBtn.UIStroke.Color = Color3.fromRGB(0, 140, 255)        end        return thisContent    end    -- Luxury Button    local function luxuryButton(parent, text, color, callback, icon)        local btn = Instance.new("TextButton", parent)        btn.Size = UDim2.new(1, -10, 0, 46)        btn.Text = ""        btn.BackgroundColor3 = color or Color3.fromRGB(255,255,255)        btn.BackgroundTransparency = 0        btn.AutoButtonColor = true        if icon then            local iconLabel = Instance.new("ImageLabel", btn)            iconLabel.Size = UDim2.new(0, 28, 0, 28)            iconLabel.Position = UDim2.new(0, 12, 0.5, -14)            iconLabel.Image = icon            iconLabel.BackgroundTransparency = 1        end        local txt = Instance.new("TextLabel", btn)        txt.Size = UDim2.new(1, icon and -46 or -20, 1, 0)        txt.Position = icon and UDim2.new(0, 44, 0, 0) or UDim2.new(0, 10, 0, 0)        txt.Text = text        txt.Font = Enum.Font.GothamBold        txt.TextSize = 18        txt.TextColor3 = Color3.fromRGB(30,65,140)        txt.BackgroundTransparency = 1        txt.TextXAlignment = Enum.TextXAlignment.Left        local corner = Instance.new("UICorner", btn)        corner.CornerRadius = UDim.new(0, 12)        local stroke = Instance.new("UIStroke", btn)        stroke.Thickness = 2        stroke.Color = Color3.fromRGB(135,206,250)        btn.MouseEnter:Connect(function() btn.BackgroundColor3 = Color3.fromRGB(210,235,255) end)        btn.MouseLeave:Connect(function() btn.BackgroundColor3 = color or Color3.fromRGB(255,255,255) end)        btn.MouseButton1Click:Connect(function() if callback then callback() end end)        return btn    end    -- Luxury Toggle    local function luxuryToggle(parent, text, default, callback)        local toggleFrame = Instance.new("Frame", parent)        toggleFrame.Size = UDim2.new(1, -10, 0, 46)        toggleFrame.BackgroundTransparency = 1        local btn = Instance.new("TextButton", toggleFrame)        btn.Size = UDim2.new(1,-54,1,0)        btn.Position = UDim2.new(0,0,0,0)        btn.BackgroundColor3 = Color3.fromRGB(255,255,255)        btn.BackgroundTransparency = 0        btn.Text = ""        btn.AutoButtonColor = true        Instance.new("UICorner", btn).CornerRadius = UDim.new(0,12)        local stroke = Instance.new("UIStroke", btn)        stroke.Thickness = 2        stroke.Color = Color3.fromRGB(135,206,250)        local txt = Instance.new("TextLabel", btn)        txt.Size = UDim2.new(1,0,1,0)        txt.BackgroundTransparency = 1        txt.Text = text        txt.Font = Enum.Font.GothamBold        txt.TextSize = 18        txt.TextColor3 = Color3.fromRGB(35,54,94)        txt.TextXAlignment = Enum.TextXAlignment.Left        txt.Position = UDim2.new(0,12,0,0)        local tog = Instance.new("ImageButton", toggleFrame)        tog.Size = UDim2.new(0,38,0,38)        tog.Position = UDim2.new(1,-38,0.5,-19)        tog.BackgroundTransparency = 1        tog.Image = default and "rbxassetid://6031068421" or "rbxassetid://6031068420"        tog.AnchorPoint = Vector2.new(1,0.5)        tog.ClipsDescendants = true        local state = default        tog.MouseButton1Click:Connect(function()            state = not state            tog.Image = state and "rbxassetid://6031068421" or "rbxassetid://6031068420"            if callback then callback(state) end        end)        return toggleFrame    end    -- Luxury Slider    local function luxurySlider(parent, text, min, max, default, callback)        local frame = Instance.new("Frame", parent)        frame.Size = UDim2.new(1,-10,0,64)        frame.BackgroundTransparency = 1        local label = Instance.new("TextLabel", frame)        label.Size = UDim2.new(1,0,0,22)        label.Position = UDim2.new(0,0,0,0)        label.BackgroundTransparency = 1        label.Text = text.." ["..default.."]"        label.Font = Enum.Font.GothamBold        label.TextSize = 18        label.TextColor3 = Color3.fromRGB(35,54,94)        label.TextXAlignment = Enum.TextXAlignment.Left        local sliderBack = Instance.new("Frame", frame)        sliderBack.Size = UDim2.new(1,-16,0,13)        sliderBack.Position = UDim2.new(0,8,0,30)        sliderBack.BackgroundColor3 = Color3.fromRGB(200,220,250)        sliderBack.BackgroundTransparency = 0.15        sliderBack.BorderSizePixel = 0        Instance.new("UICorner", sliderBack).CornerRadius = UDim.new(0,6)        local slider = Instance.new("Frame", sliderBack)        slider.Size = UDim2.new((default-min)/(max-min),0,1,0)        slider.BackgroundColor3 = Color3.fromRGB(40,140,255)        slider.BackgroundTransparency = 0.07        slider.BorderSizePixel = 0        Instance.new("UICorner", slider).CornerRadius = UDim.new(0,6)        local dragging = false        sliderBack.InputBegan:Connect(function(inp)            if inp.UserInputType == Enum.UserInputType.MouseButton1 or inp.UserInputType == Enum.UserInputType.Touch then dragging = true end        end)        sliderBack.InputEnded:Connect(function(inp)            if inp.UserInputType == Enum.UserInputType.MouseButton1 or inp.UserInputType == Enum.UserInputType.Touch then dragging = false end        end)        sliderBack.InputChanged:Connect(function(inp)            if (inp.UserInputType == Enum.UserInputType.MouseMovement or inp.UserInputType == Enum.UserInputType.Touch) and dragging then                local px = math.clamp((inp.Position.X - sliderBack.AbsolutePosition.X)/sliderBack.AbsoluteSize.X, 0, 1)                local val = math.floor((min + (max-min)*px)+0.5)                slider.Size = UDim2.new(px,0,1,0)                label.Text = text.." ["..val.."]"                if callback then callback(val) end            end        end)        return frame    end    -- Luxury Dropdown    local function luxuryDropdown(parent, text, options, callback)        local frame = Instance.new("Frame", parent)        frame.Size = UDim2.new(1,-10,0,48)        frame.BackgroundTransparency = 1        local btn = Instance.new("TextButton", frame)        btn.Size = UDim2.new(1,0,1,0)        btn.BackgroundColor3 = Color3.fromRGB(255,255,255)        btn.BackgroundTransparency = 0        btn.Text = ""        btn.AutoButtonColor = true        Instance.new("UICorner", btn).CornerRadius = UDim.new(0,13)        local stroke = Instance.new("UIStroke", btn)        stroke.Thickness = 2        stroke.Color = Color3.fromRGB(135,206,250)        local txt = Instance.new("TextLabel", btn)        txt.Size = UDim2.new(1,-30,1,0)        txt.Position = UDim2.new(0,12,0,0)        txt.BackgroundTransparency = 1        txt.Text = text .. " ▼"        txt.Font = Enum.Font.GothamBold        txt.TextSize = 18        txt.TextColor3 = Color3.fromRGB(35,54,94)        txt.TextXAlignment = Enum.TextXAlignment.Left        local dropFrame = Instance.new("Frame", parent)        dropFrame.Size = UDim2.new(1,-10,0, #options * 40)        dropFrame.Position = UDim2.new(0,0,0,51)        dropFrame.BackgroundColor3 = Color3.fromRGB(245,250,255)        dropFrame.BackgroundTransparency = 0        dropFrame.Visible = false        dropFrame.ZIndex = 10        Instance.new("UICorner", dropFrame).CornerRadius = UDim.new(0,13)        local dropLayout = Instance.new("UIListLayout", dropFrame)        dropLayout.SortOrder = Enum.SortOrder.LayoutOrder        dropLayout.Padding = UDim.new(0,4)        for i,v in ipairs(options) do            local opt = Instance.new("TextButton", dropFrame)            opt.Size = UDim2.new(1,0,0,38)            opt.BackgroundTransparency = 1            opt.Text = v            opt.Font = Enum.Font.Gotham            opt.TextSize = 16            opt.TextColor3 = Color3.fromRGB(40,100,200)            opt.AutoButtonColor = true            opt.ClipsDescendants = true            opt.MouseButton1Click:Connect(function()                txt.Text = v.." ▼"                dropFrame.Visible = false                if callback then callback(v) end            end)        end        btn.MouseButton1Click:Connect(function()            dropFrame.Visible = not dropFrame.Visible        end)        dropFrame.Parent = parent        return frame, dropFrame    end    -- ========== DEMO UI ==========    local infoContent = createTab("Info", "rbxassetid://6034996695")    luxuryButton(infoContent, "PHUCMAX Luxury Button", Color3.fromRGB(255,255,255), function()        notify("Luxury button đã click!")    end, "rbxassetid://6034996695")    luxuryButton(infoContent, "Copy Discord", Color3.fromRGB(220,246,255), function()        setclipboard("https://discord.gg/a7rtPheBY6")        notify("Đã copy Discord!")    end, "rbxassetid://6031071050")    luxuryToggle(infoContent, "Bật/tắt chế độ Luxury", false, function(state)        notify("Trạng thái luxury: "..(state and "ON" or "OFF"))    end)    luxurySlider(infoContent, "Điều chỉnh độ sáng", 10, 100, 50, function(val) end)    local _, dropFrame = luxuryDropdown(infoContent, "Chọn chế độ", {"Mode 1", "Mode 2", "Mode 3"}, function(val)        notify("Đã chọn: "..val)    end)    dropFrame.Parent = infoContent    local tabSetting = createTab("Setting", "rbxassetid://87746599009295")    luxuryButton(tabSetting, "Nút Setting", Color3.fromRGB(232,255,248), function()        notify("Setting Clicked")    end, "rbxassetid://87746599009295")    luxuryToggle(tabSetting, "Auto Save", true, function(state)        notify("Auto Save: " .. tostring(state))    end)    luxurySlider(tabSetting, "Volume", 0, 100, 30, function(val) end)    local demoContent = createTab("Demo", "rbxassetid://6034996695")    luxuryButton(demoContent, "Luxury Button (White)", Color3.fromRGB(255,255,255), function()        notify("Bạn đã bấm Luxury Button!")    end, "rbxassetid://87746599009295")    luxuryButton(demoContent, "Luxury Button (Xanh Sky)", Color3.fromRGB(210,246,255), function()        notify("Luxury Xanh Sky!")    end, "rbxassetid://87746599009295")    luxuryButton(demoContent, "Luxury Button (Xanh lá)", Color3.fromRGB(224,255,232), function()        notify("Luxury Xanh Lá!")    end, "rbxassetid://87746599009295")    luxuryToggle(demoContent, "Bật/Tắt Luxury Toggle", false, function(state)        notify("Luxury Toggle: "..(state and "Đang bật" or "Đang tắt"))    end)    luxuryToggle(demoContent, "Auto Mode", true, function(state)        notify("Auto Mode: "..(state and "ON" or "OFF"))    end)    luxurySlider(demoContent, "Độ sáng màn hình", 0, 100, 50, function(val)        notify("Độ sáng: "..val)    end)    luxurySlider(demoContent, "Âm lượng", 0, 10, 5, function(val)        notify("Âm lượng: "..val)    end)    local _, dropFrame1 = luxuryDropdown(demoContent, "Chọn màu sắc", {"Đỏ", "Lục", "Lam", "Vàng"}, function(val)        notify("Bạn chọn: "..val)    end)    dropFrame1.Parent = demoContent    local _, dropFrame2 = luxuryDropdown(demoContent, "Chọn chế độ", {"Chuyên nghiệp", "Bình thường", "Cơ bản"}, function(val)        notify("Chế độ: "..val)    end)    dropFrame2.Parent = demoContent    -- Hướng dẫn thêm tab mới:    -- local tabTest = createTab("TênTab", "rbxassetid://ID_ICON")    -- luxuryButton(tabTest, "Tên nút", MÀU, function() ... end, "ID_ICON_NÚT")endcreateMainUI()