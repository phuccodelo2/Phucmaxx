-- PHUCMAX ANTI AFK + AUTO TELE + AUTO-REJOIN UI -- Compatible with many executors (Trigon/Synapse/Flux). -- IMPORTANT: If you want "tự động chạy lại script khi vô lại game" to work across server joins, -- set AUTOLOAD_URL to a raw URL that returns this script (e.g. a GitHub raw link) and use an executor -- that supports queue_on_teleport (syn.queue_on_teleport / queue_on_teleport).

local Players = game:GetService("Players") local RunService = game:GetService("RunService") local UserInputService = game:GetService("UserInputService") local VirtualUser = game:GetService("VirtualUser") local TeleportService = game:GetService("TeleportService") local LocalPlayer = Players.LocalPlayer local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- CONFIG local AUTOLOAD_URL = "" -- <-- paste your raw script URL here if you want queue-on-teleport auto-run local TELEPORT_POS = Vector3.new(1658.0, 19.3, -224.0) local UI_NAME = "PHUCMAX_AntiAFK_UI"

-- State local state = { autoRejoin = false, -- auto run when rejoin (uses queue_on_teleport if available and AUTOLOAD_URL is set) antiAFK = true, enabled = false, }

-- Helper: safe queue_on_teleport local function try_queue_on_teleport(url) if url == nil or url == "" then return false, "no url" end if syn and syn.queue_on_teleport then pcall(function() syn.queue_on_teleport("loadstring(game:HttpGet(""..url..""))()") end) return true elseif queue_on_teleport then pcall(function() queue_on_teleport("loadstring(game:HttpGet(""..url..""))()") end) return true end return false, "queue_on_teleport not supported" end

-- Create UI local screenGui = Instance.new("ScreenGui") screenGui.Name = UI_NAME screenGui.Parent = PlayerGui screenGui.ResetOnSpawn = false

local main = Instance.new("Frame") main.Name = "Main" main.Size = UDim2.new(0,220,0,120) main.Position = UDim2.new(0.02,0,0.02,0) main.AnchorPoint = Vector2.new(0,0) main.BackgroundTransparency = 0 main.BackgroundColor3 = Color3.fromRGB(18,18,20) main.BorderSizePixel = 0 main.Parent = screenGui

local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0,12) corner.Parent = main

local stroke = Instance.new("UIStroke") stroke.Thickness = 2 stroke.Transparency = 0 stroke.Parent = main

-- Holographic pastel gradient as an overlay ImageLabel with UIGradient and Tween loop local holo = Instance.new("ImageLabel") holo.Name = "Holo" holo.Size = UDim2.new(1,0,1,0) holo.Position = UDim2.new(0,0,0,0) holo.BackgroundTransparency = 1 holo.Image = "" -- leave empty (we use UIGradient + ImageLabel for effect) holo.Parent = main

local holoGrad = Instance.new("UIGradient") holoGrad.Parent = holo holoGrad.Rotation = 0 holoGrad.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromRGB(255,121,198)), ColorSequenceKeypoint.new(0.25, Color3.fromRGB(161,99,255)), ColorSequenceKeypoint.new(0.5, Color3.fromRGB(99,217,255)), ColorSequenceKeypoint.new(0.75, Color3.fromRGB(144,255,175)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255,221,121)), }) holoGrad.Transparency = NumberSequence.new(0.6)

-- Neon pastel border effect (stroke uses gradient by tweening color) local function startHoloLoop() spawn(function() local t = 0 while screenGui.Parent do t = (tick() % 4) / 4 holoGrad.Rotation = t * 360 stroke.Color = Color3.fromHSV((tick()/6) % 1, 0.7, 1) wait(0.03) end end) end startHoloLoop()

-- Title local title = Instance.new("TextLabel") title.Name = "Title" title.Size = UDim2.new(1, -12, 0, 28) title.Position = UDim2.new(0, 6, 0, 6) title.BackgroundTransparency = 1 title.Text = "PHUCMAX ANTI AFK" title.Font = Enum.Font.GothamBold title.TextSize = 16 title.TextXAlignment = Enum.TextXAlignment.Left title.TextYAlignment = Enum.TextYAlignment.Center title.TextTransparency = 0 title.RichText = true title.Parent = main

-- Title holographic effect (looping gradient on text) local titleGrad = Instance.new("UIGradient") titleGrad.Parent = title titleGrad.Rotation = 0 titleGrad.Color = holoGrad.Color:Clone() startHoloLoop()

-- FPS and Ping labels local fpsLabel = Instance.new("TextLabel") fpsLabel.Name = "FPS" fpsLabel.Size = UDim2.new(0.5, -8, 0, 18) fpsLabel.Position = UDim2.new(0,6,0,36) fpsLabel.BackgroundTransparency = 1 fpsLabel.Font = Enum.Font.Gotham fpsLabel.TextSize = 14 fpsLabel.Text = "FPS: 0" fpsLabel.TextXAlignment = Enum.TextXAlignment.Left fpsLabel.Parent = main

local pingLabel = Instance.new("TextLabel") pingLabel.Name = "PING" pingLabel.Size = UDim2.new(0.5, -8, 0, 18) pingLabel.Position = UDim2.new(0.5,8,0,36) pingLabel.BackgroundTransparency = 1 pingLabel.Font = Enum.Font.Gotham pingLabel.TextSize = 14 pingLabel.Text = "PING: N/A" pingLabel.TextXAlignment = Enum.TextXAlignment.Left pingLabel.Parent = main

-- Buttons area local buttonY = 62 local function makeToggle(name, default, x) local lbl = Instance.new("TextLabel") lbl.Size = UDim2.new(0.6,0,0,20) lbl.Position = UDim2.new(0,6,x,buttonY) lbl.BackgroundTransparency = 1 lbl.Text = name lbl.Font = Enum.Font.Gotham lbl.TextSize = 14 lbl.TextXAlignment = Enum.TextXAlignment.Left lbl.Parent = main

local btn = Instance.new("TextButton")
btn.Size = UDim2.new(0.3, -6, 0, 20)
btn.Position = UDim2.new(0.7,0,x,buttonY)
btn.BackgroundTransparency = 0
btn.Text = default and "ON" or "OFF"
btn.Font = Enum.Font.GothamBold
btn.TextSize = 14
btn.AutoButtonColor = true
btn.Parent = main

local function toggle(v)
    btn.Text = v and "ON" or "OFF"
    if name:lower():find("anti afk") then state.antiAFK = v end
    if name:lower():find("auto rejoin") or name:lower():find("auto run") then state.autoRejoin = v end
end

btn.MouseButton1Click:Connect(function()
    toggle(btn.Text ~= "ON")
end)

toggle(default)
return btn

end

local antiBtn = makeToggle("Anti AFK", true, 0) local autoRunBtn = makeToggle("Auto-run on rejoin", false, 24)

-- Main ON/OFF and Teleport button local mainToggle = Instance.new("TextButton") mainToggle.Size = UDim2.new(0.46, -8, 0, 28) mainToggle.Position = UDim2.new(0.02,0,0, buttonY+36) mainToggle.BackgroundTransparency = 0 mainToggle.Font = Enum.Font.GothamBold mainToggle.TextSize = 16 mainToggle.Text = "Enable" mainToggle.Parent = main

local tpBtn = Instance.new("TextButton") tpBtn.Size = UDim2.new(0.46, -8, 0, 28) tpBtn.Position = UDim2.new(0.52,0,0, buttonY+36) tpBtn.BackgroundTransparency = 0 tpBtn.Font = Enum.Font.GothamBold tpBtn.TextSize = 16 tpBtn.Text = "Teleport Now" tpBtn.Parent = main

-- Draggable local dragging = false local dragOffset = Vector2.new(0,0) main.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true dragOffset = Vector2.new(input.Position.X - main.AbsolutePosition.X, input.Position.Y - main.AbsolutePosition.Y) end end) main.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end end) UserInputService.InputChanged:Connect(function(input) if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then main.Position = UDim2.new(0, input.Position.X - dragOffset.X, 0, input.Position.Y - dragOffset.Y) end end)

-- FPS counter local lastTime = tick() local frameCount = 0 local fps = 0 RunService.RenderStepped:Connect(function(dt) frameCount = frameCount + 1 if tick() - lastTime >= 1 then fps = frameCount / (tick() - lastTime) frameCount = 0 lastTime = tick() fpsLabel.Text = string.format("FPS: %d", math.floor(fps)) end end)

-- Ping attempt (best-effort using Stats) spawn(function() local success, stats = pcall(function() return game:GetService("Stats") end) if success and stats and stats:FindFirstChild("Network") and stats.Network:FindFirstChild("Data Ping") then while true do local ok, val = pcall(function() return stats.Network["Data Ping"].Value end) if ok and val then pingLabel.Text = string.format("PING: %dms", math.floor(val)) else pingLabel.Text = "PING: N/A" end wait(1) end else pingLabel.Text = "PING: N/A" end end)

-- Teleport function local function safeTeleportTo(pos) local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() local hrp = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChildWhichIsA("BasePart") if hrp then hrp.CFrame = CFrame.new(pos) end end

-- Anti-AFK: use VirtualUser to emulate input when Idled if LocalPlayer then LocalPlayer.Idled:Connect(function() if state.antiAFK then pcall(function() VirtualUser:CaptureController() VirtualUser:ClickButton2(Vector2.new(0,0)) end) end end) end

-- Detect disconnect/kick and attempt to rejoin (best-effort) local function setupRejoinHandler() -- If autoRejoin enabled and AUTOLOAD_URL set + queue_on_teleport supported, queue loader if state.autoRejoin and AUTOLOAD_URL ~= "" then local ok, err = try_queue_on_teleport(AUTOLOAD_URL) if ok then -- queued; nothing else required else warn("Auto-rejoin requested but queue_on_teleport unavailable: ", err) end end

-- Monitor character removal: try to teleport back (best-effort)
LocalPlayer.CharacterRemoving:Connect(function()
    if state.autoRejoin then
        -- Attempt to teleport to place (this may take player to new server)
        pcall(function()
            TeleportService:Teleport(game.PlaceId, LocalPlayer)
        end)
    end
end)

end

-- Main enable/disable behaviors local function enableAll() state.enabled = true mainToggle.Text = "Disable" -- Teleport on enable pcall(function() safeTeleportTo(TELEPORT_POS) end) -- Setup rejoin queue if requested if state.autoRejoin then local ok, err = try_queue_on_teleport(AUTOLOAD_URL) if not ok then print("[PHUCMAX] Auto-run on rejoin unavailable: "..tostring(err)) else print("[PHUCMAX] Auto-run queued for next teleport/join.") end end setupRejoinHandler() end

local function disableAll() state.enabled = false mainToggle.Text = "Enable" end

mainToggle.MouseButton1Click:Connect(function() if state.enabled then disableAll() else enableAll() end end)

-- Teleport button tpBtn.MouseButton1Click:Connect(function() pcall(function() safeTeleportTo(TELEPORT_POS) end) end)

-- Auto-run toggle handler: if turned on while enabled, attempt to queue autoRunBtn.MouseButton1Click:Connect(function() -- handled by makeToggle if state.autoRejoin and state.enabled then local ok, err = try_queue_on_teleport(AUTOLOAD_URL) if ok then print("Queued auto-run for next join.") else warn("Cannot queue auto-run: ", tostring(err)) end end end)

-- Clean exit screenGui.Destroying:Connect(function() disableAll() end)

-- Small helper print print("PHUCMAX UI loaded. Drag the small square to move it. Set AUTOLOAD_URL at top to enable auto-run-on-rejoin with queue_on_teleport.")

-- End of script

