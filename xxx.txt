
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- üìÅ T√™n th∆∞ m·ª•c ch·ª©a base
local baseFolder = Workspace:FindFirstChild("Plots") or Workspace:FindFirstChild("Bases")
if not baseFolder then warn("Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c base") return end

-- ‚úÖ T·ªça ƒë·ªô c·∫ßn so s√°nh
local checkPositions = {
	Vector3.new(-469.1, -6.6, -99.3),
	Vector3.new(-348.4, -6.6, 7.1),
	Vector3.new(-469.1, -6.5, 8.2),
	Vector3.new(-348.0, -6.6, -100.0),
	Vector3.new(-469.2, -6.6, 114.7),
	Vector3.new(-348.5, -6.6, 111.3),
	Vector3.new(-470.4, -6.6, 221.0),
	Vector3.new(-348.4, -6.6, 219.3),
}

-- üîç Ki·ªÉm tra TextLabel/TextBox ch·ª©a t√™n player
local function isMyBase(model)
	for _, desc in ipairs(model:GetDescendants()) do
		if desc:IsA("TextLabel") or desc:IsA("TextBox") then
			local text = (desc.Text or ""):lower()
			if text:find(LocalPlayer.Name:lower()) or text:find(LocalPlayer.DisplayName:lower()) then
				return true
			end
		end
	end
	return false
end

-- üì¶ T√¨m base c·ªßa ng∆∞·ªùi ch∆°i
local function findMyBasePart()
	for _, plot in ipairs(baseFolder:GetChildren()) do
		if plot:IsA("Model") then
			if isMyBase(plot) then
				local primary = plot:FindFirstChild("PrimaryPart") or plot.PrimaryPart or plot:FindFirstChildWhichIsA("BasePart")
				if primary then return primary end
			end
		end
	end
	return nil
end

-- üìè T√¨m t·ªça ƒë·ªô g·∫ßn nh·∫•t so v·ªõi base
local function getNearestPoint(basePos)
	local closest = nil
	local shortest = math.huge
	for _, pos in ipairs(checkPositions) do
		local dist = (basePos - pos).Magnitude
		if dist < shortest then
			shortest = dist
			closest = pos
		end
	end
	return closest
end

-- üåà T·∫°o ESP Rainbow t·∫°i v·ªã tr√≠ ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh
local function createBaseESP(position, text)
	local part = Instance.new("Part")
	part.Anchored = true
	part.CanCollide = false
	part.Transparency = 1
	part.Size = Vector3.new(1, 1, 1)
	part.Position = position
	part.Name = "PhucESPBase"
	part.Parent = Workspace

	local gui = Instance.new("BillboardGui")
	gui.Adornee = part
	gui.Size = UDim2.new(0, 130, 0, 30)
	gui.AlwaysOnTop = true
	gui.Parent = part

	local label = Instance.new("TextLabel", gui)
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.GothamBold
	label.TextScaled = true
	label.TextStrokeTransparency = 0.3
	label.TextStrokeColor3 = Color3.new(0, 0, 0)
	label.Text = text

	local hue = 0
	RunService.RenderStepped:Connect(function()
		if not label or not label.Parent then return end
		hue = (hue + 0.01) % 1
		label.TextColor3 = Color3.fromHSV(hue, 1, 1)
	end)

	return part -- d√πng l√†m Part ƒë·ªÉ teleport sau
end

-- ‚úÖ T·ªïng k·∫øt: t√¨m base, t√¨m to·∫° ƒë·ªô g·∫ßn nh·∫•t, ƒë·∫∑t ESP t·∫°i ƒë√≥
local myBase = findMyBasePart()
if myBase then
	local nearest = getNearestPoint(myBase.Position)
	if nearest then
		local espPart = createBaseESP(nearest, "Your Base")
		warn("ESP ƒë√£ t·∫°o t·∫°i v·ªã tr√≠ g·∫ßn base nh·∫•t:", nearest)
	else
		warn("Kh√¥ng t√¨m ƒë∆∞·ª£c v·ªã tr√≠ g·∫ßn base.")
	end
else
	warn("Kh√¥ng t√¨m ƒë∆∞·ª£c base ng∆∞·ªùi ch∆°i.")
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- ‚öôÔ∏è Tham s·ªë
local SPEED = 70
local JUMP = 200
local JUMP_DISTANCE = 5
local ESP_PART_NAME = "PhucESPBase"

-- Bi·∫øn
local autoMoveEnabled = false
local currentThread

-- UI Giao di·ªán
local screenGui = Instance.new("ScreenGui", PlayerGui)
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 180, 0, 50)
frame.Position = UDim2.new(0.01, 0, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local button = Instance.new("TextButton", frame)
button.Size = UDim2.new(1, 0, 1, 0)
button.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
button.Text = "Auto Move To ESP: OFF"
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Font = Enum.Font.GothamBold
button.TextSize = 14

-- ƒê·ª£i nh√¢n v·∫≠t
local Humanoid, HRP
local function updateCharacter()
	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	Humanoid = char:WaitForChild("Humanoid")
	HRP = char:WaitForChild("HumanoidRootPart")
end
updateCharacter()
LocalPlayer.CharacterAdded:Connect(updateCharacter)

-- T√¨m ESP Part
local function getESPPart()
	for _, obj in ipairs(workspace:GetChildren()) do
		if obj:IsA("BasePart") and obj.Name == ESP_PART_NAME then
			return obj
		end
	end
	return nil
end

-- Ch·ª©c nƒÉng Auto Move
local function startAutoMove()
	currentThread = task.spawn(function()
		while autoMoveEnabled and task.wait() do
			local targetPart = getESPPart()
			if not targetPart or not HRP or not Humanoid then continue end

			Humanoid.WalkSpeed = SPEED
			Humanoid.JumpPower = JUMP

			local distance = (HRP.Position - targetPart.Position).Magnitude
			if distance > 5 then
				local direction = (targetPart.Position - HRP.Position).Unit
				HRP.CFrame = CFrame.new(HRP.Position, HRP.Position + direction)
				Humanoid:Move(Vector3.new(direction.X, 0, direction.Z), false)

				local rayOrigin = HRP.Position + Vector3.new(0, 2, 0)
				local rayDirection = direction * JUMP_DISTANCE
				local raycastParams = RaycastParams.new()
				raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
				raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

				local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
				if result and result.Instance then
					Humanoid.Jump = true
				end
			else
				Humanoid:Move(Vector3.zero, false)
				break
			end
		end
	end)
end

-- N√∫t toggle
button.MouseButton1Click:Connect(function()
	autoMoveEnabled = not autoMoveEnabled
	button.Text = "Auto Move To ESP: " .. (autoMoveEnabled and "ON" or "OFF")
	if autoMoveEnabled then
		startAutoMove()
	elseif currentThread then
		task.cancel(currentThread)
	end
end)
